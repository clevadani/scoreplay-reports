{"version":3,"sources":["components/Header.js","utils/index.js","charts/Event.js","charts/PercentageChange.js","charts/Revenue.js","charts/Yield.js","views/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","randomValidColor","Math","floor","random","generateColors","size","opacity","colors","i","push","Event","data","dataArray","Object","values","dataBar","labels","keys","datasets","label","backgroundColor","length","borderWidth","borderColor","className","options","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","PercentageChange","data2","startDate","endDate","rangeStart","productPercentages","dataKeys","dataKeys2","map","item","sum","difference","abs","ceil","dataHorizontal","fill","split","Revenue","dataLine","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Yield","revenue","revenue2","yieldObject","yieldObject2","revenueKeys","revenueKeys2","mainArray","yieldPercetageObject","ChartsPage","useState","moment","subtract","format","handleStartDate","handleEndtDate","facilityId","handleFacilityId","filteredData","handleFilteredData","filteredData2","handleFilteredData2","handleRevenue","handleRevenue2","previousRangeStartDate","handlePreviousRangeStartDate","userId","loading","updateLoading","fetchData","a","body","dateRange","duration","diff","asDays","previousRangeStart","body2","query","facility_id","headers","axios","post","apiCall","apiCall2","productDict","productDict2","revenueDict","revenueDict2","product_type","name","amount","useEffect","setInterval","Container","Row","Col","Form","inline","Group","Label","htmlFor","Control","type","value","onChange","e","target","aria-describedby","Button","onClick","preventDefault","Spinner","animation","App","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b0ed314.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nconst Header = () => {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">Scoreplay Monitor</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header;","function randomValidColor() {\n\treturn Math.floor(Math.random()*256);\n}\nexport function generateColors (size, opacity) {\n\tconst colors = []\n\tfor(let i = 0; i < size; i++){\n  \tcolors.push(`rgba(${randomValidColor()}, ${randomValidColor()}, ${randomValidColor()}, ${opacity})`)\n  }\n  return colors;\n}","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { generateColors } from \"../utils\";\n\nconst Event = ({data}) => {\n\n    const dataArray = Object.values(data);\n\n    const dataBar = {\n      labels: Object.keys(data),\n      datasets: [\n        {\n          label: \"Number of events per product\",\n          data: dataArray,\n          backgroundColor: generateColors(dataArray.length, 0.4),\n          borderWidth: 2,\n          borderColor: generateColors(dataArray.length, 1)\n        }\n      ]\n    }\n    const barChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        xAxes: [\n          {\n            barPercentage: 1,\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }\n        ]\n      }\n    }\n\n    return (\n      <MDBContainer>\n        <h3 className=\"mt-5\">Events</h3>\n        <Bar data={dataBar} options={barChartOptions} />\n      </MDBContainer>\n    );\n}\n\nexport default Event;","import React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { generateColors } from \"../utils\";\n\nconst PercentageChange = ({data, data2, startDate, endDate, rangeStart}) => {\n    const productPercentages = {};\n\n    const dataKeys = Object.keys(data)\n    const dataKeys2 = Object.keys(data2)\n    \n    const mainArray = dataKeys.length > dataKeys2.length ? dataKeys: dataKeys2;\n    \n    mainArray.map(item => {\n        // console.log(`${item} => data(${data[item]}) - data2(${data2[item]})`)\n        if(data[item] && data2[item]){\n          const sum = data[item] + data2[item];\n          const difference = Math.abs(data[item] - data2[item]);\n            productPercentages[item] = Math.ceil(difference/sum * 100)\n      } else {\n            productPercentages[item] = 100\n      }\n        return item;\n    })\n    const dataArray = Object.values(productPercentages);\n\n    const dataHorizontal = {\n        labels: Object.keys(productPercentages),\n        datasets: [\n          {\n            label: '% change with previous date range',\n            data: dataArray,\n            fill: false,\n            backgroundColor: generateColors(dataArray.length, 0.4),\n            borderColor: generateColors(dataArray.length, 1),\n            borderWidth: 1\n          }\n        ]\n      }\n\n    return (\n      <MDBContainer>\n        <h3 className=\"mt-5\">Percentage change with previous date range</h3>\n        <p>{rangeStart.split(\" \")[0]} - {startDate} and {startDate} - {endDate}</p>\n        <HorizontalBar data={dataHorizontal} options={{ responsive: true }} />\n      </MDBContainer>\n    );\n}\n\nexport default PercentageChange;","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\nconst Revenue = ({data}) => {\n\n    const dataArray = Object.values(data);\n\n    const dataLine = {\n        labels: Object.keys(data),\n        datasets: [\n          {\n            label: \"My First dataset\",\n            fill: true,\n            lineTension: 0.3,\n            backgroundColor: \"rgba(225, 204,230, .3)\",\n            borderColor: \"rgb(205, 130, 158)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgb(205, 130,1 58)\",\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\n            pointBorderWidth: 10,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n            pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: dataArray\n          }\n        ]\n      }\n\n    return (\n      <MDBContainer>\n        <h3 className=\"mt-5\">Total revenue</h3>\n        <Line data={dataLine} options={{ responsive: true }} />\n      </MDBContainer>\n    );\n}\n\nexport default Revenue;","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport { generateColors } from \"../utils\";\n\nconst Yield = ({data, data2, startDate, endDate, rangeStart, revenue, revenue2}) => {\n\n    const dataKeys = Object.keys(data)\n    const dataKeys2 = Object.keys(data2)\n\n    const yieldObject = {};\n    const yieldObject2 = {};\n    \n    \n    dataKeys.map(item => {\n        yieldObject[item] = Math.floor(revenue[item] / data[item]);\n      return item;\n    });\n    \n    dataKeys2.map(item => {\n        yieldObject2[item] = Math.floor(revenue2[item] / data2[item]);\n      return item;\n    });\n    /* \n    */\n    \n    const revenueKeys = Object.keys(yieldObject)\n    const revenueKeys2 = Object.keys(yieldObject2)\n    \n    const mainArray = revenueKeys.length > revenueKeys2.length ? revenueKeys: revenueKeys2;\n    \n    const yieldPercetageObject = {}\n    \n    mainArray.map(item => {\n      if(data[item] && data2[item]){\n        const sum = yieldObject[item] + yieldObject2[item];\n        const difference = Math.abs(yieldObject[item] - yieldObject2[item]);\n        yieldPercetageObject[item] = Math.floor(difference/sum * 100)\n      } else {\n        yieldPercetageObject[item] = 100\n      }\n      return item;\n    });\n    const dataArray = Object.values(yieldPercetageObject);\n\n    const dataBar = {\n      labels: Object.keys(yieldPercetageObject),\n      datasets: [\n        {\n          label: \"% change with previous date range\",\n          data: dataArray,\n          backgroundColor: generateColors(dataArray.length, 0.4),\n          borderWidth: 2,\n          borderColor: generateColors(dataArray.length, 1)\n        }\n      ]\n    }\n    const barChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        xAxes: [\n          {\n            barPercentage: 1,\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }\n        ]\n      }\n    }\n\n    return (\n      <MDBContainer>\n        <h3 className=\"mt-5\">Average yield per product</h3>\n        <p>{rangeStart.split(\" \")[0]} - {startDate} and {startDate} - {endDate}</p>\n        <Bar data={dataBar} options={barChartOptions} />\n      </MDBContainer>\n    );\n}\n\nexport default Yield;","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Button, Container, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Event from \"../../charts/Event\"\nimport PercentageChange from \"../../charts/PercentageChange\"\nimport Revenue from \"../../charts/Revenue\"\nimport Yield from \"../../charts/Yield\"\nconst PAGE_UPDATE_INTERVAL = 1000 * 60 * 5; // 5 minutes\n\nconst ChartsPage = () => {\n\n\tconst [startDate, handleStartDate] = useState(moment().subtract(7,'d').format('YYYY-MM-DD'));\n\tconst [endDate, handleEndtDate] = useState(moment().format('YYYY-MM-DD'));\n\tconst [facilityId, handleFacilityId] = useState();\n\tconst [filteredData, handleFilteredData] = useState({});\n\tconst [filteredData2, handleFilteredData2] = useState({});\n\tconst [revenue, handleRevenue] = useState({});\n\tconst [revenue2, handleRevenue2] = useState({});\n\tconst [previousRangeStartDate, handlePreviousRangeStartDate] = useState();\n\tconst [userId] = useState(0);\n\tconst [loading, updateLoading] = useState(true);\n\n\tasync function fetchData() {\n\n\t\tconst body = {\n\t\t\t\"query\": {\n\t\t\t\t\t\"start_date\": `${startDate} 00:00:00`,\n\t\t\t\t\t\"end_date\": `${endDate} 23:59:59`\n\t\t\t}\n\t\t}\n\t\tconst dateRange = moment.duration(moment(endDate).diff(moment(startDate))).asDays();\n\t\tconst previousRangeStart = `${moment().subtract(dateRange*2,'d').format('YYYY-MM-DD')} 00:00:00`;\n\t\tconst body2 = {\n\t\t\t\"query\": {\n\t\t\t\t\t\"start_date\": previousRangeStart,\n\t\t\t\t\t\"end_date\": `${startDate} 23:59:59`\n\t\t\t}\n\t\t}\n\t\thandlePreviousRangeStartDate(previousRangeStart)\n\t\tif(facilityId) body.query.facility_id = facilityId\n\t\tconst options = {\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer jiMb2jr9d1sGL8Za6Kb4VJnty0K98MqW',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t};\n\n\t\tconst apiCall = await axios.post('https://erp.sofive.com/report/sales', body, options);\n\t\tconst apiCall2 = await axios.post('https://erp.sofive.com/report/sales', body2, options);\n\t\t\n\t\tconst data = apiCall.data;\n\t\tconst data2 = apiCall2.data;\n\n\n    const productDict = {};\n    const productDict2 = {};\n    const revenueDict = {};\n    const revenueDict2 = {};\n    data.map(item => {\n\t\t\tif(!productDict[`${item.product_type.name}`]){\n\t\t\t\tproductDict[`${item.product_type.name}`] = 1;\n\t\t\t\trevenueDict[`${item.product_type.name}`] = item.amount;\n\t\t\t} else {\n\t\t\t\tproductDict[`${item.product_type.name}`]++;\n\t\t\t\trevenueDict[`${item.product_type.name}`] += item.amount;\n\t\t\t}\n      return item;\n\t\t})\n    data2.map(item => {\n\t\t\tif(!productDict2[`${item.product_type.name}`]){\n\t\t\t\tproductDict2[`${item.product_type.name}`] = 1;\n\t\t\t\trevenueDict2[`${item.product_type.name}`] = item.amount;\n\t\t\t} else {\n\t\t\t\tproductDict2[`${item.product_type.name}`]++;\n\t\t\t\trevenueDict2[`${item.product_type.name}`] += item.amount;\n\t\t\t}\n      return item;\n\t\t})\n\t\t\n\t\thandleFilteredData(productDict);\n\t\thandleRevenue(revenueDict);\n\t\thandleFilteredData2(productDict2);\n\t\thandleRevenue2(revenueDict2);\n\t\tupdateLoading(false);\n\t}\n\n\n  useEffect(() => {\n\t\tfetchData();\n\t\tsetInterval(function(){ fetchData() }, PAGE_UPDATE_INTERVAL);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [userId]);\n\t\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tfetchData();\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Form inline className=\"mt-3\">\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label htmlFor=\"startDate\">Start Date:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tclassName=\"mx-sm-3\"\n\t\t\t\t\t\t\t\tid=\"startDate\"\n\t\t\t\t\t\t\t\tvalue={startDate}\n\t\t\t\t\t\t\t\tonChange={e => handleStartDate(e.target.value)}\n\t\t\t\t\t\t\t\taria-describedby=\"startDate\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label htmlFor=\"endDate\">End Date:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tclassName=\"mx-sm-3\"\n\t\t\t\t\t\t\t\tid=\"endDate\"\n\t\t\t\t\t\t\t\tvalue={endDate}\n\t\t\t\t\t\t\t\tonChange={e => handleEndtDate(e.target.value)}\n\t\t\t\t\t\t\t\taria-describedby=\"endDate\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label htmlFor=\"facilityId\">Facility id:</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tclassName=\"mx-sm-3\"\n\t\t\t\t\t\t\t\tid=\"facilityId\"\n\t\t\t\t\t\t\t\tvalue={facilityId}\n\t\t\t\t\t\t\t\tonChange={e => handleFacilityId(e.target.value)}\n\t\t\t\t\t\t\t\taria-describedby=\"facilityId\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button onClick={handleSubmit} className=\"mx-sm-3\">\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{\n\t\t\t\tloading && <Spinner animation=\"border\" className=\"mt-5\"/>\n\t\t\t}\n\t\t\t{\n\t\t\t\t!loading && \n\t\t\t\t<div>\n\t\t\t\t\t{Object.keys(filteredData).length && <Event data={filteredData} />}\n\t\t\t\t\t{Object.keys(filteredData).length && <PercentageChange data={filteredData} data2={filteredData2} rangeStart={previousRangeStartDate} startDate={startDate} endDate={endDate} />}\n\t\t\t\t\t{Object.keys(filteredData).length && <Yield data={filteredData} data2={filteredData2} rangeStart={previousRangeStartDate} startDate={startDate} endDate={endDate} revenue={revenue} revenue2={revenue2}/>}\n\t\t\t\t\t{Object.keys(revenue).length && <Revenue data={revenue} />}\n\t\t\t\t</div>\n\t\t\t}\n\t\t</Container>\n\t);\n}\n\nexport default ChartsPage;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './views/Home/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}